// This module will define the colors needed to be displayed for each type of shape or sprite selected2
// This includes the target circle (grey circle), the incoming circles (blue and red circles), the numbers, health line, decimal point (small circle), percentage sign, etc.
//-------------------------------------------------------------------------
//    Color_Mapper.sv                                                    --
//    Stephen Kempf                                                      --
//    3-1-06                                                             --
//                                                                       --
//    Modified by David Kesler  07-16-2008                               --
//    Translated by Joe Meng    07-07-2013                               --
//    Modified by Zuofu Cheng   08-19-2023                               --
//                                                                       --
//    Fall 2023 Distribution                                             --
//                                                                       --
//    For use with ECE 385 USB + HDMI                                    --
//    University of Illinois ECE Department                              --
//-------------------------------------------------------------------------


module  color_mapper ( input  logic [9:0] BallX, BallY, DrawX, DrawY, Ball_size, TargetX, TargetY, TargetS,
                       input logic color,
                       input logic [3:0] bckr, bckg, bckb,
                       output logic [3:0]  Red, Green, Blue );
    
    logic ball_on;
    logic Target_on;
	  
    int DistX, DistY, Size;
    assign DistX = DrawX - BallX;
    assign DistY = DrawY - BallY;
    assign Size = Ball_size;
    
    int TDistX, TDistY, TSize;
    assign TDistX = DrawX - TargetX;
    assign TDistY = DrawY - TargetY;
    assign TSize = TargetS;
  
    always_comb
    begin:Ball_on_proc
        if ( (DistX*DistX + DistY*DistY) <= (Size * Size) )
            ball_on = 1'b1;
        else 
            ball_on = 1'b0;
     end 
      
     
    always_comb
    begin: Target_on_proc
        if ( (TDistX*TDistX + TDistY*TDistY) <= (TSize * TSize) )
            Target_on = 1'b1;
        else 
            Target_on = 1'b0;
     end  
     
    always_comb
    begin:RGB_Display
        if ((ball_on == 1'b1 && color == 1'b0)) begin // blue circle
            Red = 4'h0;
            Green = 4'h0;
            Blue = 4'hf;
        end       
        
        else if ((ball_on == 1'b1 && color == 1'b1)) begin 
            Red = 4'hf;
            Green = 4'h0;
            Blue = 4'h0;
        end 
        
        else if ((Target_on == 1'b1)) begin
            Red = 4'hf;
            Green = 4'hf;
            Blue = 4'h0;
        end
        
        else begin 
            Red = bckr; 
            Green = bckg;
            Blue = bckb;
        end      
    end 
    
endmodule
